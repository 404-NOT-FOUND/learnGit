#name Liu Tan
#tag  gitNote

>>> set up own profile {{{1
git config --global user.name ""
git config --global user.email []
git donfig -- global core.editor emacs(vim for defaul)
}}}1

>>> basic git {{{1
git help <verbe> // verb (commit, add...)
git diff []
git add [] // support multiple files add
git commit -m ""
git commit -a -m "" // -a = -All add all fles
git commit --amend -m "" // amend a previous comment
git status
}}}1

>>> other git useful comment {{{1
1. git |mv| {{{2
- |mkdir lib|
- |git mv Hello.java lib|
git mv will combine two step:
    (1) the |Hello.java| has been deleted
    (2) the file lib/Hello.java has been created and ready to be commmited
}}}2
2. git |tag| {{{2
git tag [] // aftertag, even reset head, when [git hist --all] we can still see
    the taged hist.
git tag -d [] // drop tag
}}}2

}}}1

>>> check historical branches  {{{1
git log --graph --pretty=oneline 

[options]
git log --pretty=oneline --max-count=1
git log --pretty=oneline --since='5 minutes ago'
git log --pretty=oneline --until='5 minutes ago'
git log --pretty=oneline --author=<your name>
git log --pretty=oneline --all

git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
[--pretty="..."] defines the format of the output.
[%h] is the abbreviated hash of the commit
[%d] are any decorations on that commit (e.g. branch heads or tags)
[%ad] is the author date
[%s] is the comment
[%an] is the author name
[--graph] informs git to display the commit tree in an ASCII graph layout
[--date=short] keeps the date format nice and short

git reflog // check all operations
}}}1

>>> version control {{{1
// 已经commit了
git reset --hard /* pointer */ // pointer can be HEAD^ (HEAD~1) or commit id's
git revert Head // we can undo a committed change

// 已经add了
git reset HEAD [file]  // unstage file

// 只是撤销修改
git checkout -- [file] // undo change, back to status of last add
}}}1

}}}1

git push origin master // push local master branch to origin master branch
git clone git@github.com:peachgo-gitSkills.git // clone repo from github

Linux comment:
<c-r> search command history
<c-r> + \t edit command history
<c-u> delete previous command
<c-k> delete current command

>>> git branch {{{1
1) view branch 
        --> |git branch|
1) creat branch 
        --> |git branch [name]|
3) creat & switch branch 
        --> |git checkout -b [name]|
4) switch branch 
        --> |git checkout [name]|
5) merge branch to curr branch 
        --> |git mere [name]|
6) delete branch 
        --> |git branch -d [name]|
}}}1
